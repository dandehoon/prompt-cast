name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  EXT_NAME: prompt-cast

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # Only run if this is a merge commit (PR merge) and contains version bump
    if: |
      contains(github.event.head_commit.message, 'Merge pull request #') &&
      contains(github.event.head_commit.message, 'from dandehoon/release/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version from package.json
      id: extract-version
      run: |
        echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24.x'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps

    - name: Run tests
      run: pnpm check
      env:
        CI: true

    - name: Build extension
      run: |
        pnpm run build
        pnpm run zip

    - name: Extract Changelog Entry
      id: changelog
      uses: mindsers/changelog-reader-action@v2
      with:
        validation_level: error
        version: ${{ steps.extract-version.outputs.version }}
        path: ./CHANGELOG.md

    - name: Generate Commit Log
      id: commit_log
      run: |
        chmod +x ./scripts/generate-commit-log.sh
        ./scripts/generate-commit-log.sh

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ steps.extract-version.outputs.version }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.extract-version.outputs.version }}
        body: |
          ## ðŸš€ Release v${{ steps.extract-version.outputs.version }}

          ### ðŸ“‹ Changelog

          ${{ steps.changelog.outputs.changes }}

          ### ðŸ’¾ Commits

          ${{ steps.commit_log.outputs.commits }}

          ### ðŸ“¦ Installation

          #### Chrome Web Store
          - **[Install from Chrome Web Store](https://chromewebstore.google.com/detail/prompt-cast/gmcamplpmgncjmhjlpoenpdlkobgdhfp)**

          #### Locally
          1. Download the zip file from the assets below
          2. Extract the zip file to a folder
          3. Open Chrome and navigate to `chrome://extensions/`
          4. Enable "Developer mode" in the top right corner
          5. Click "Load unpacked" and select the extracted folder

          ## ðŸ”— Links
          - [Full Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          - [Documentation](https://github.com/${{ github.repository }}/blob/main/README.md)
        files: |
          .output/*.zip
        draft: false
        prerelease: false
