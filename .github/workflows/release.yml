name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  EXT_NAME: prompt-cast

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # Only run if this is a merge commit (PR merge) and contains version bump
    if: |
      contains(github.event.head_commit.message, 'Merge pull request #') &&
      contains(github.event.head_commit.message, 'from dandehoon/release/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version from package.json
      id: extract-version
      run: |
        echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run tests
      run: pnpm check
      env:
        CI: true

    - name: Build extension
      run: |
        pnpm run build
        pnpm run zip

    - name: Generate changelog
      id: changelog
      run: |
        DELIM=__CHANGELOG_EOF_$(uuidgen)__
        {
          echo "changelog<<$DELIM"
          if git tag | grep -q .; then
            PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
            git log --pretty=format:'- %s (@%an)' $PREV_TAG..HEAD || echo "- Initial release"
          else
            git log --pretty=format:'- %s (@%an)' || echo "- Initial release"
          fi
          printf '\n%s\n' "$DELIM"
        } >> "$GITHUB_OUTPUT"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ steps.extract-version.outputs.version }}
        target_commitish: ${{ github.sha }}
        name: v${{ steps.extract-version.outputs.version }}
        body: |
          Automated release created from version bump commit.

          **Recent changes:**
          ${{ steps.changelog.outputs.changelog }}

          **Installation:**
          - Download the `.zip` file from the assets below
          - Open Chrome and navigate to `chrome://extensions/`
          - Enable "Developer mode" in the top right
          - Click "Load unpacked" and select the extracted folder
          - Or install from Chrome Web Store (if published)
        files: |
          .output/*.zip
        draft: false
        prerelease: false
